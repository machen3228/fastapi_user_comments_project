"""First migration

Revision ID: 01
Revises: 
Create Date: 2025-04-16 22:23:51.739607

"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = '01'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('email', sa.String(), nullable=False),
                    sa.Column('password', sa.String(), nullable=False),
                    sa.Column('username', sa.String(), nullable=False),
                    sa.Column('birthdate', sa.DateTime(), nullable=True),
                    sa.Column('rating', sa.Float(), nullable=True),
                    sa.Column('registered_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'),
                              nullable=True),
                    sa.Column('last_login', sa.DateTime(), nullable=True),
                    sa.Column('is_active', sa.Boolean(), nullable=True),
                    sa.Column('is_superuser', sa.Boolean(), nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('username')
                    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=True)

    op.create_table('comment',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('comment_text', sa.Text(), nullable=False, comment='Текст комментария'),
                    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False, comment='Дата и время '
                                                                                                'создания комментария'),
                    sa.Column('updated_at', sa.DateTime(), nullable=True,
                              comment='Дата и время редактирования комментария'),
                    sa.Column('is_edited', sa.Boolean(), nullable=True),
                    sa.Column('author_id', sa.Integer(), nullable=True, comment='ID автора комментария'),
                    sa.Column('user_id', sa.Integer(), nullable=False, comment='ID пользователя'),
                    sa.ForeignKeyConstraint(['author_id'], ['user.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )


def downgrade():
    op.drop_table('comment')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_email'))

    op.drop_table('user')
